"""update team invitation when user not registered

Revision ID: e2ea1e64e993
Revises: 45e745a3a78f
Create Date: 2024-08-16 03:57:36.775753

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e2ea1e64e993'
down_revision: Union[str, None] = '45e745a3a78f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.alter_column('user_team_s', 'role',
    #            existing_type=postgresql.ENUM('admin', 'member', name='role'),
    #            nullable=False)
    # op.alter_column('user_team_s', 'access',
    #            existing_type=postgresql.ENUM('admin', 'view', 'edit', 'create', 'delete', 'approve', 'review', name='access'),
    #            nullable=False)
    op.drop_index('ix_user_team_s_user_email', table_name='user_team_s')
    op.drop_constraint('user_team_s_user_email_fkey', 'user_team_s', type_='foreignkey')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key('user_team_s_user_email_fkey', 'user_team_s', 'users', ['user_email'], ['email'])
    op.create_index('ix_user_team_s_user_email', 'user_team_s', ['user_email'], unique=False)
    # op.alter_column('user_team_s', 'access',
    #            existing_type=postgresql.ENUM('admin', 'view', 'edit', 'create', 'delete', 'approve', 'review', name='access'),
    #            nullable=True)
    # op.alter_column('user_team_s', 'role',
    #            existing_type=postgresql.ENUM('admin', 'member', name='role'),
    #            nullable=True)
    # ### end Alembic commands ###
